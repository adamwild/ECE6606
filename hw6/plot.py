import numpy as np
import time

import pylab
import matplotlib.pyplot as plt

def plots():
    #Hard decoding - Gray
    Ber_hg = [0.5072727272727272, 0.4975757575757576, 0.507878787878788, 0.49818181818181834, 0.4927272727272729, 0.5151515151515152, 0.4922580645161292, 0.5036363636363637, 0.5133333333333334, 0.5112500000000002, 0.4763636363636364, 0.5054545454545457, 0.470909090909091, 0.4824242424242425, 0.4769696969696971, 0.4824242424242424, 0.41333333333333333, 0.2569696969696969, 0.15393939393939393, 0.13636363636363638, 0.06733333333333333]
    Fer_hg = [0.3800000000000001, 0.37636363636363646, 0.373939393939394, 0.3690909090909091, 0.3721212121212121, 0.3848484848484849, 0.36193548387096786, 0.37212121212121213, 0.3793939393939394, 0.381875, 0.36727272727272725, 0.38242424242424256, 0.36000000000000004, 0.3484848484848485, 0.3581818181818183, 0.3587878787878788, 0.3127272727272728, 0.19212121212121203, 0.12060606060606065, 0.1048484848484849, 0.05066666666666668]

    #Hard decoding - Natural
    Ber_hn = [0.4985185185185187, 0.5053846153846154, 0.5013793103448275, 0.5095238095238094, 0.5007142857142858, 0.5130769230769231, 0.5093333333333334, 0.505, 0.49571428571428566, 0.4930769230769231, 0.4876923076923078, 0.4892307692307693, 0.4969230769230771, 0.48451612903225827, 0.46709677419354845, 0.47714285714285704, 0.4361538461538462, 0.3370370370370371, 0.21906249999999997, 0.15644444444444444, 0.10413793103448281]
    Fer_hn = [0.37703703703703717, 0.37769230769230777, 0.3834482758620689, 0.3804761904761905, 0.38428571428571445, 0.38615384615384635, 0.38400000000000006, 0.37406249999999985, 0.36857142857142866, 0.37230769230769234, 0.37230769230769234, 0.36615384615384616, 0.36461538461538456, 0.363225806451613, 0.355483870967742, 0.36642857142857144, 0.33307692307692316, 0.26148148148148154, 0.16750000000000004, 0.11955555555555555, 0.0855172413793104]

    #Soft decoding - Natural
    Ber_sn = [0.4685714285714285, 0.51, 0.45428571428571424, 0.46545454545454557, 0.48235294117647065, 0.5066666666666666, 0.5114285714285715, 0.515, 0.5342857142857144, 0.5400000000000001, 0.5057142857142857, 0.4942857142857143, 0.4857142857142857, 0.4628571428571428, 0.4657142857142857, 0.4257142857142857, 0.30857142857142855, 0.11714285714285715, 0.10857142857142857, 0.11142857142857143, 0.10285714285714287]
    Fer_sn = [0.34285714285714286, 0.37249999999999994, 0.3485714285714286, 0.3618181818181818, 0.3682352941176471, 0.38666666666666666, 0.3771428571428571, 0.38999999999999996, 0.39428571428571424, 0.4044444444444444, 0.3828571428571429, 0.36, 0.37142857142857144, 0.3628571428571428, 0.3742857142857142, 0.31428571428571433, 0.24285714285714288, 0.09428571428571429, 0.08571428571428573, 0.09714285714285716, 0.07428571428571429]

    #Soft decoding - Gray
    Ber_sg = [0.4857142857142857, 0.4975, 0.5175000000000001, 0.4942857142857143, 0.5, 0.4514285714285714, 0.47750000000000004, 0.5028571428571429, 0.47428571428571425, 0.4371428571428571, 0.4857142857142857, 0.44571428571428573, 0.47428571428571425, 0.5225, 0.5022222222222221, 0.3171428571428571, 0.25999999999999995, 0.18285714285714288, 0.0857142857142857, 0.10571428571428572, 0.08]
    Fer_sg = [0.36, 0.36999999999999994, 0.38999999999999996, 0.3914285714285714, 0.3771428571428571, 0.3457142857142857, 0.38, 0.3771428571428571, 0.36, 0.35428571428571426, 0.37714285714285717, 0.3171428571428571, 0.3685714285714285, 0.39, 0.3644444444444444, 0.24571428571428575, 0.18857142857142856, 0.13999999999999999, 0.07142857142857142, 0.08571428571428572, 0.06285714285714286]

    values = [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 22, 23, 25]
    plt.plot(values, Ber_hg, color='blue', lw=1, label='Hard decoding - Gray', marker='o')
    plt.plot(values, Ber_hn, color='red', lw=1, label='Hard decoding - Natural', marker='o')
    plt.plot(values, Ber_sn, color='orange', lw=1, label='Soft decoding - Natural', marker='o')
    plt.plot(values, Ber_sg, color='green', lw=1, label='Soft decoding - Gray', marker='o')
    plt.yscale('log')
    plt.xlabel('Power efficiency Eb/N0 (dB)')
    plt.ylabel('Bit Error Rate')
    plt.grid(color='g', linestyle='-', linewidth=0.1)
    plt.title('Viterbi algorithm')
    plt.legend()
    plt.show()

def plots():
    #Hard decoding - Gray
    Ber_hard = [0.4920936116382037, 0.48576850094876667, 0.4777777777777778, 0.5256166982922201, 0.5142314990512333, 0.49335863377609107, 0.5104364326375711, 0.49841872232764073, 0.4971537001897534, 0.4889310562934851, 0.48007590132827327, 0.5053763440860215, 0.5047438330170778, 0.4933586337760911, 0.49778621125869704, 0.4705882352941177, 0.4503478810879191, 0.42125237191650866, 0.32764073371284, 0.3294117647058823, 0.16255534471853256]
    Fer_hard = [0.35736875395319423, 0.36242884250474405, 0.35294117647058826, 0.3757115749525618, 0.3738140417457306, 0.3636938646426313, 0.36748893105629354, 0.362428842504744, 0.35863377609108177, 0.35420619860847574, 0.35673624288425065, 0.36432637571157506, 0.3630613535736876, 0.3655913978494625, 0.362428842504744, 0.3561037318153068, 0.3339658444022771, 0.3168880455407969, 0.2409867172675522, 0.24379084967320255, 0.11764705882352941]

    #Hard decoding - Natural
    Ber_n = [0.5084516565246788, 0.48816768086544965, 0.47248576850094887, 0.49698340874811464, 0.5091503267973856, 0.4784313725490197, 0.5065359477124183, 0.46299810246679324, 0.5066413662239089, 0.4829339143064634, 0.49841872232764073, 0.4965211891208096, 0.5019607843137254, 0.5091277890466531, 0.4978991596638656, 0.45022624434389147, 0.46462063086104005, 0.46112237998647737, 0.3672699849170437, 0.3674889310562935, 0.2536369386464263]
    Fer_n = [0.36105476673428005, 0.3624070317782287, 0.35610373181530686, 0.363499245852187, 0.3764705882352942, 0.3555555555555557, 0.36797385620915046, 0.3485135989879823, 0.3706514864010122, 0.36092955700798846, 0.3567362428842506, 0.37001897533206846, 0.3653594771241832, 0.36984448951994603, 0.3627450980392158, 0.34766214177978877, 0.3384484228473998, 0.33671399594320495, 0.2699849170437405, 0.26312460468058196, 0.1865907653383934]

    values = [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 22, 23, 25]
    plt.plot(values, Ber_hard, color='blue', lw=1, label='Hard decoding - Gray', marker='o')
    plt.plot(values, Ber_n, color='red', lw=1, label='Hard decoding - Natural', marker='o')
    plt.yscale('log')
    plt.xlabel('Power efficiency Eb/N0 (dB)')
    plt.ylabel('Bit Error Rate')
    plt.grid(color='g', linestyle='-', linewidth=0.1)
    plt.title('Treillis Coded Modulation')
    plt.legend()
    plt.show()

plots()
